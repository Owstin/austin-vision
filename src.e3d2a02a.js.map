{"version":3,"sources":["index.js"],"names":["inputElement","document","getElementById","outputElement","numberMap","formatNumberString","numbers","split","map","num","join","randomNum","cache","value","Math","floor","random","includes","push","length","shift","inputChange","event","randomBorder","className","innerHTML","target","removeInputBorderClass","addEventListener"],"mappings":";;;AAmDA,aAnDA,QAAA,wBAEA,IAAMA,EAAeC,SAASC,eAAe,SACvCC,EAAgBF,SAASC,eAAe,UAExCE,EAAY,CACb,EAAA,OACA,EAAA,MACA,EAAA,MACA,EAAA,QACA,EAAA,OACA,EAAA,OACA,EAAA,MACA,EAAA,QACA,EAAA,QACA,EAAA,QAGCC,EAAqB,SAAAC,GACzBA,OAAAA,EACGC,MAAM,IACNC,IAAI,SAAAC,GAAsBL,MAAAA,eAAAA,OAAAA,EAAUK,GAAQA,KAAAA,OAAAA,EAArC,aACPC,KAAK,KAEJC,EAAa,WACXC,IAAAA,EAAQ,GACP,OAAA,WACCC,IAAAA,EAAQC,KAAKC,MAAsB,GAAhBD,KAAKE,UAC1BJ,OAAAA,EAAMK,SAASJ,GACVF,KAGTC,EAAMM,KAAKL,GACPD,EAAMO,OAAS,GACjBP,EAAMQ,QAEDP,IAZQ,GAgBbQ,EAAc,SAAAC,GACZC,IAAAA,EAAyBnB,UAAAA,OAAAA,EAAUO,MACzCX,EAAawB,UAAYD,EACzBpB,EAAcsB,UAAYpB,EAAmBiB,EAAMI,OAAOb,QAGtDc,EAAyB,WAC7B3B,EAAawB,UAAY,IAG3BxB,EAAa4B,iBAAiB,QAASP,GACvCrB,EAAa4B,iBAAiB,OAAQD","file":"src.e3d2a02a.js","sourceRoot":"..\\src","sourcesContent":["import \"./styles/numbers.css\";\n\nconst inputElement = document.getElementById(\"input\");\nconst outputElement = document.getElementById(\"output\");\n\nconst numberMap = {\n  0: \"zero\",\n  1: \"one\",\n  2: \"two\",\n  3: \"three\",\n  4: \"four\",\n  5: \"five\",\n  6: \"six\",\n  7: \"seven\",\n  8: \"eight\",\n  9: \"nine\",\n};\n\nconst formatNumberString = numbers =>\n  numbers\n    .split(\"\")\n    .map(num => `<span class=${numberMap[num]}>${num}</span>`)\n    .join(\"\");\n\nconst randomNum = (() => {\n  const cache = [];\n  return () => {\n    const value = Math.floor(Math.random() * 10);\n    if (cache.includes(value)) {\n      return randomNum();\n    }\n\n    cache.push(value);\n    if (cache.length > 3) {\n      cache.shift();\n    }\n    return value;\n  };\n})();\n\nconst inputChange = event => {\n  const randomBorder = `border-${numberMap[randomNum()]}`;\n  inputElement.className = randomBorder;\n  outputElement.innerHTML = formatNumberString(event.target.value);\n};\n\nconst removeInputBorderClass = () => {\n  inputElement.className = \"\";\n};\n\ninputElement.addEventListener(\"input\", inputChange);\ninputElement.addEventListener(\"blur\", removeInputBorderClass);\n"]}